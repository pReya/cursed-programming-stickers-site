---
import { getCollection } from "astro:content";
import ImageCard, { type Technology } from "../components/ImageCard";

const allTechnologies = (await getCollection("technology")).map(
  ({ data, id }) => ({ ...data, id })
);

const cursedImageNames = Object.values(
  import.meta.glob("../../public/cursed-images/*.svg", {
    eager: true,
    query: "?url",
  })
)
  .map((module) => {
    const fullPath = (module as { default: string })?.default
      .split("/public")
      .at(-1) as string;

    return {
      path: fullPath,
      filename: fullPath.split("/").at(-1) as string,
      id: fullPath.split("/").at(-1)?.split(".svg")[0] as string,
    };
  })
  .map((imageObj) => {
    const [technologyId1, technologyId2] = imageObj.id?.split("-") as [
      string | undefined,
      string | undefined,
    ];
    return {
      ...imageObj,
      technologies: [
        technologyId1 &&
          allTechnologies.find((tech) => tech.id === technologyId1),
        technologyId2 &&
          allTechnologies.find((tech) => tech.id === technologyId2),
      ].filter(Boolean),
    };
  });

console.log(JSON.stringify(cursedImageNames, null, 2));
console.log(`Found ${cursedImageNames.length} cursed images`);
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <meta name="generator" content={Astro.generator} />
    <title>Cursed Programming Logos Stickers</title>
  </head>
  <body>
    <main class="p-8 flex flex-col items-center">
      <div class="mx-auto max-w-2xl text-center mb-6">
        <h2 class="text-4xl font-bold tracking-tight text-gray-900">
          Cursed Programming Logos
        </h2>
        <p class="mt-6">
          Source: <a
            class="text-sm underline"
            href="https://github.com/mkrl/misbrands"
            target="_blank">`misbrands` on GitHub</a
          >
        </p>
        <p class="mt-6 text-lg leading-8 text-gray-600">
          Do these look familiar? Well, look again.
        </p>
      </div>
      <div class="grid grid-cols-[1fr_1fr_1fr] gap-2">
        {
          cursedImageNames?.map((image) => (
            <ImageCard
              id={image.id}
              img={image.path}
              technologies={image.technologies as [Technology, Technology]}
            />
          ))
        }
      </div>
    </main>
  </body>
</html>
